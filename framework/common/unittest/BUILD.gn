# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/test.gni")
import("//foundation/distributeddatamgr/udmf/udmf.gni")

module_output_path = "udmf/common"

###############################################################################
config("module_private_config") {
  include_dirs = [
    "${udmf_interfaces_path}/innerkits/common",
    "${udmf_interfaces_path}/innerkits/convert",
    "${udmf_framework_path}/innerkitsimpl/data",
    "${udmf_framework_path}/common",
    "${udmf_interfaces_path}/innerkits/data",
    "${udmf_framework_path}/common/unittest/mock/include",
    "${udmf_framework_path}/innerkitsimpl/client/",
  ]
}

common_deps = [ "${udmf_interfaces_path}/innerkits:udmf_client" ]

common_external_deps = [
  "ability_base:want",
  "access_token:libaccesstoken_sdk",
  "access_token:libnativetoken",
  "access_token:libtoken_setproc",
  "bundle_framework:appexecfwk_core",
  "c_utils:utils",
  "ffmpeg:libohosffmpeg",
  "hilog:libhilog",
  "hisysevent:libhisysevent",
  "hitrace:hitrace_meter",
  "hitrace:libhitracechain",
  "image_framework:image",
  "image_framework:image_native",
  "image_framework:pixelmap",
  "ipc:ipc_core",
  "kv_store:distributeddata_inner",
  "kv_store:distributeddata_mgr",
  "libexif:libexif",
  "samgr:samgr_proxy",
]

ohos_unittest("UtdCfgsCheckerTest") {
  module_out_path = module_output_path

  sources = [
    "${udmf_framework_path}/common/graph.cpp",
    "${udmf_framework_path}/common/utd_cfgs_checker.cpp",
    "${udmf_framework_path}/common/utd_graph.cpp",
    "utd_cfgs_checker_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = common_external_deps
}

ohos_unittest("UdmfTypesUtilTest") {
  module_out_path = module_output_path

  sources = [ "udmf_types_util_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = common_external_deps

  defines = [
    "private=public",
    "protected=public",
  ]
}

ohos_unittest("UdmfTypesUtilAbnormalTest") {
  module_out_path = module_output_path

  sources = [
    "${udmf_framework_path}/common/tlv_object.cpp",
    "${udmf_framework_path}/common/udmf_types_util.cpp",
    "${udmf_framework_path}/common/unittest/mock/tlv_util_mock.cpp",
    "${udmf_framework_path}/innerkitsimpl/common/unified_meta.cpp",
    "${udmf_framework_path}/innerkitsimpl/convert/udmf_conversion.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/application_defined_record.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/file.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/image.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/plain_text.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/system_defined_form.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/system_defined_record.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/text.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/unified_data.cpp",
    "${udmf_framework_path}/innerkitsimpl/data/unified_record.cpp",
    "udmf_types_util_abnormal_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${udmf_interfaces_path}/innerkits:udmf_client",
    "${udmf_interfaces_path}/innerkits:utd_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = common_external_deps

  defines = [
    "private=public",
    "protected=public",
  ]
}

ohos_unittest("TlvUtilTest") {
  module_out_path = module_output_path

  sources = [
    "${udmf_framework_path}/innerkitsimpl/convert/udmf_conversion.cpp",
    "tlv_util_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:image",
    "image_framework:image_native",
    "image_framework:pixelmap",
  ]

  defines = [
    "private=public",
    "protected=public",
  ]
}

ohos_unittest("EndianConverterTest") {
  module_out_path = module_output_path

  sources = [
    "${udmf_framework_path}/common/endian_converter.cpp",
    "endian_converter_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = common_external_deps

  defines = [
    "private=public",
    "protected=public",
  ]
}

###############################################################################
group("unittest") {
  testonly = true

  deps = [
    ":EndianConverterTest",
    ":TlvUtilTest",
    ":UdmfTypesUtilAbnormalTest",
    ":UdmfTypesUtilTest",
    ":UtdCfgsCheckerTest",
  ]
}
###############################################################################
